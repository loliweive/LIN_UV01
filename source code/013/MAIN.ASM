;This code is de'assemblered by HOLYCHIP shanghai Ltd.. 
;Soft version 1.02
;Thanks for using, find any bug, please report it to HC!

          #include "HC18P013.inc"
          list p = 18P013, R=DEC
;********************************************
;               RAM  START                  
;******************************************** 
;;;;;;;;;;;;;;;4M 2T


          DATA	
;;CONST          
#Define PORTA_INI	b'00001000'	; PORTA端口初值 
#Define PORTB_INI	b'01100001'	; PORTB端口初值  

#Define TRISA_INI	b'00000000'	; PORTA方向初值  0 输出 1输入
#Define TRISB_INI	b'00001010'	; PORTB方向初值

#Define PHCON_INI	b'11111101'	; 上拉 0 使能 1禁止
#Define PDCON_INI	b'11111111'	; 下拉 0 使能 1禁止 
#Define ODCON_INI	b'00000000'	; 开漏输出      1 使能 0禁止

#Define	OPTION_INI	b'10000000'	; X 上升沿下降沿 T0时钟源 T0计数沿选择 分频器派送 T0预分频1:2
#DEFINE T0_INI	        142		; 4m4t，240us  v1 136-95S  v2 141-93S

#DEFINE	PCON_INI	B'10111000'     ;WDT使能   外部int禁止	        
#DEFINE	IOCB_INI	B'00000000'     ;PB 中断和唤醒 0 禁止

#DEFINE	INTECON_INI	B'10000001'     ;WDT使能   外部int禁止	 

;;;IO DEFINE HERE
#DEFINE	PIN_BUZZER	PORTB,4 
#DEFINE	PIN_OUTPUT	PORTB,2
#DEFINE	PIN_KEY		PORTB,1
#define	PIN_SPK		PORTB,1
;--------------------

#Define C_RAM_START		0x10
#Define C_RAM_END		0xC0

;RAM define here  优先使用20~3f空间 
CNT_DIDA_TIME_L		EQU	0X20
CNT_DIDA_TIME_H		EQU	0X21

SECOND			EQU	0X22
COUNT_240US		EQU	0X23
FLAG_BYTE		EQU	0X24
#DEFINE		F_DIDA_B	FLAG_BYTE,0
#DEFINE		F_4MS8_B	FLAG_BYTE,1
#DEFINE		F_SLEEP_B	FLAG_BYTE,2
#DEFINE		F_STATUS_ON_B	FLAG_BYTE,3
#DEFINE		F_KEYLOCK_B	FLAG_BYTE,4
#DEFINE		F_SCAN0_B	FLAG_BYTE,5
#DEFINE		F_SCAN1_B	FLAG_BYTE,6
CNT_4MS8		EQU	0X25
CNT_KEY_L		EQU	0X26
CNT_KEY_H		EQU	0X27
CNT_4MS8_2		EQU	0X28
DATA_DISP		EQU	0X29
DATA_DISP_H		EQU	0X2A
DATA_DISP_L		EQU	0X2B
CHUSHU			EQU	0X2C
BEICHUSHU		EQU	0X2D
YUSHU			EQU	0X2E
SHANG			EQU	0X2F
DATA_DISP_BUFF		EQU	0X30
CNT_DIV			EQU	0X31

PCLATH_TEMP	    	EQU       0X3D 
STATUS_TEMP     	EQU       0X3E
W_TEMP          	EQU       0X3F            
	

;********************************************
;               CODE START                  
;********************************************
        CODE

        ORG     0000H	
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP        
        GOTO    RESET        
                
        ORG     0008H  							
INTPROGRAM:		

	MOVWF	W_TEMP
	SWAPF	W_TEMP,F	; SAVE W
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	; SAVE STATUS
     
	BTFSS	T0IF		;240us
	GOTO	INT_EXIT
	BCF	T0IF
	
	MOVLW	T0_INI
	MOVWF	T0
	
INT_PWM_OUTPUT:

	BTFSS	F_DIDA_B
	GOTO	INT_PWM_OUTPUT_END
	MOVLW	B'00010000'
	XORWF	PORTB,F
	DECFSZ	CNT_DIDA_TIME_L,F
	GOTO	INT_PWM_OUTPUT_END
	MOVF	CNT_DIDA_TIME_H,W
	BTFSS	Z
	GOTO	$+9
	BCF	F_DIDA_B
	MOVF	SECOND,W
	BTFSC	Z
	GOTO	$+2
	GOTO	$+4
	BSF	F_SLEEP_B
	BCF	F_STATUS_ON_B
	GOTO	INT_PWM_OUTPUT_END
	DECF	CNT_DIDA_TIME_H,F
	MOVLW	D'166'
	MOVWF	CNT_DIDA_TIME_L
	
INT_PWM_OUTPUT_END:	
TIMEFLAG:
	
	INCF	COUNT_240US,F
	MOVLW	D'20'
	SUBWF	COUNT_240US,W
	BTFSS	C
	GOTO	INT_EXIT
	CLRF	COUNT_240US
	BSF	F_4MS8_B	
	
INT_EXIT:
    							
	SWAPF	STATUS_TEMP, W
	MOVWF	STATUS				;恢复STATUS
        SWAPF	W_TEMP, W			;恢复W		
	RETFIE			
;***************************************  	   
RESET:   
        CLRF    INTECON
        CLRF    INTFLAG
	CLRF	PCON    
	CLRWDT
 
;***************************************   
	
;***************************************      
;IO

	MOVLW	PORTA_INI
	MOVWF	PORTA
		
	MOVLW	TRISA_INI
	MOVWF	TRISA
		
	MOVLW	PORTB_INI
	MOVWF	PORTB

	MOVLW	TRISB_INI
	MOVWF	TRISB
	
	MOVLW	ODCON_INI
	MOVWF	ODCON	
	
	MOVLW	PHCON_INI
	MOVWF	PHCON	

	MOVLW	PDCON_INI
	MOVWF	PDCON
	
	MOVLW	IOCB_INI
	MOVWF	IOCB	
	
;***************************************	
;;;;;;CLRF RAM 自减
;;;;;
;;;;;#Define C_RAM_START	0x3f
;;;;;#Define C_RAM_END		0xd0
;;;;;        CLRF    TEMP_BUF
;;;;;	
;;;;;	MOVLW	C_RAM_START
;;;;;	MOVWF	FSR
;;;;;	
;;;;;_INI_RAM_Loop
;;;;;	CLRF	INDF
;;;;;	decf	FSR, F
;;;;;
;;;;;        MOVF    FSR,W
;;;;; ;       IORLW   C_RAM_END       ;比较时,需要将fsr的高两位置1,否则仿真编译可以过,烧出的芯片没错!这是自家的时候!
;;;;;	XORLW	C_RAM_END        ;自减清ram的时候,初值给3f,减到D0H,停止自减,然后再把D0H清一下!D0H相当于是10h!因为高两位是1.
;;;;;	BTFSS	Z                ;自加清ram的时候,初值给10h,判断到c0h停止自加,不用再请c0h,3f清完,加一就变成c0h了,相当于00h.
;;;;;	GOTO	_INI_RAM_Loop 
;;;;;	CLRF	INDF 
;;;;;	
;***************************************	
;CLRF RAM 自加
;#Define C_RAM_START		0x10
;#Define C_RAM_END		0xC0
        CLRF    0X07
	
	MOVLW	C_RAM_START
	MOVWF	FSR
	
_INI_RAM_Loop:
	CLRF	INDF
	INCF	FSR, F

        MOVF    FSR,W
	XORLW	C_RAM_END 
	BTFSS	Z         
	GOTO	_INI_RAM_Loop 
	
;***************************************	

;***************************************
;T0

	MOVLW	OPTION_INI		 
	MOVWF	OPTION

	MOVLW	T0_INI
        MOVWF   T0

	BCF	T0IF
	
	MOVLW	PCON_INI
	MOVWF	PCON
	
	MOVLW   INTECON_INI
	MOVWF   INTECON
	
	BSF	F_SLEEP_B
;┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
;┃主循环							 ┃
;┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
MAINLOOP:

	CLRWDT	   
	CALL	SLEEP_PROCESS      
	BTFSS	F_4MS8_B
	GOTO	MAINLOOP
	BCF	F_4MS8_B
	CALL	TIMER_PROCESS
	CALL	KEY_PROCESS
	CALL	DISP_PROCESS	
	GOTO	MAINLOOP
	
TIMER_PROCESS:

	BTFSS	F_STATUS_ON_B
	GOTO	TIMER_PROCESS_END
	BSF	PIN_OUTPUT
	INCF	CNT_4MS8_2,F
	INCF	CNT_4MS8,F
	MOVLW	D'187'
	XORWF	CNT_4MS8_2,W
	BTFSS	Z
	GOTO	$+5
	CLRF	CNT_4MS8_2
	MOVF	DATA_DISP,W
	BTFSS	Z
	DECF	DATA_DISP,F
	MOVLW	D'208'		;1S
	XORWF	CNT_4MS8,W
	BTFSS	Z
	GOTO	TIMER_PROCESS_END
	CLRF	CNT_4MS8
	BSF	F_DIDA_B
	MOVLW	D'166'
	MOVWF	CNT_DIDA_TIME_L
	CLRF	CNT_DIDA_TIME_H
	DECFSZ	SECOND,F
	GOTO	TIMER_PROCESS_NOT0
	MOVLW	D'8'
	MOVWF	CNT_DIDA_TIME_H
	GOTO	TIMER_PROCESS_END
	
TIMER_PROCESS_NOT0:

	CLRF	CNT_DIDA_TIME_H
	MOVLW	D'166'
	MOVWF	CNT_DIDA_TIME_L
	GOTO	TIMER_PROCESS_END
	
TIMER_PROCESS_END:
	
	RETURN

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
KEY_PROCESS:

	BTFSS	PIN_KEY
	GOTO	KEY_PROCESS_L
KEY_PROCESS_H:

	INCF	CNT_KEY_H,F
	CLRF	CNT_KEY_L
	MOVLW	D'10'
	XORWF	CNT_KEY_H,W
	BTFSS	Z
	GOTO	KEY_PROCESS_END
	CLRF	CNT_KEY_H
	BCF	F_KEYLOCK_B
;	BTFSS	F_STATUS_ON_B
;	BSF	F_SLEEP_B
	GOTO	KEY_PROCESS_END
	
KEY_PROCESS_L:

	INCF	CNT_KEY_L,F
	CLRF	CNT_KEY_H
	MOVLW	D'10'
	XORWF	CNT_KEY_L,W
	BTFSS	Z
	GOTO	KEY_PROCESS_END
	CLRF	CNT_KEY_L
	BTFSC	F_KEYLOCK_B
	GOTO	KEY_PROCESS_END
	BSF	F_KEYLOCK_B		;按键有效
	BTFSS	F_STATUS_ON_B
	GOTO	KEY_PROCESS_ON
KEY_PROCESS_OFF:

	BCF	F_STATUS_ON_B
	CLRF	CNT_4MS8
	BSF	F_DIDA_B
	CLRF	SECOND
	BCF	PIN_OUTPUT
	BCF	PIN_BUZZER
	MOVLW	D'166'
	MOVWF	CNT_DIDA_TIME_L
	MOVLW	D'8'
	MOVWF	CNT_DIDA_TIME_H
	GOTO	KEY_PROCESS_END
	
KEY_PROCESS_ON:

	BSF	F_STATUS_ON_B
	BSF	TRISB,1
	MOVLW	D'90'
	MOVWF	SECOND
	GOTO	KEY_PROCESS_END
	
KEY_PROCESS_END:

	RETURN
;--------------------------------------------

;********************************************
;
;********************************************
DISP_PROCESS:

	MOVLW	D'100'
	XORWF	DATA_DISP,W
	BTFSS	Z
	GOTO	DATA_JUDGE_NOT100
	GOTO	DATA_DISP_100

DATA_DISP_100:

	MOVLW	D'10'
	MOVWF	DATA_DISP_H
	MOVWF	DATA_DISP_L
	GOTO	SEG_JUDGE
	
DATA_JUDGE_NOT100:

	MOVLW	D'10'
	MOVWF	CHUSHU
	MOVF	DATA_DISP,W
	CALL	DIV
	MOVF	SHANG,W
	MOVWF	DATA_DISP_H
	MOVF	YUSHU,W
	MOVWF	DATA_DISP_L
	GOTO	SEG_JUDGE
	
SEG_JUDGE:

	BTFSS	F_SCAN0_B
	GOTO	SEG13_JUDGE
	GOTO	SEG24_JUDGE
	
SEG13_JUDGE:

	BTFSS	F_SCAN1_B
	GOTO	SEG1_SCAN	;00
	GOTO	SEG3_SCAN	;10

SEG24_JUDGE:

	BTFSS	F_SCAN1_B
	GOTO	SEG2_SCAN	;01
	GOTO	SEG4_SCAN	;11
	
SEG1_SCAN:

	BSF	F_SCAN0_B
	BCF	F_SCAN1_B	;01
	MOVLW	HIGH	TAB
	MOVWF	PCLATH
	MOVF	DATA_DISP_H,W
	CALL	TAB
	MOVWF	DATA_DISP_BUFF
;	BSF	TRISA,0
;	BSF	TRISA,1
;	BSF	TRISB,7
;	BSF	TRISA,2		;关显示
	BCF	PORTA,0
	BCF	PORTA,1
	BCF	PORTB,7
	BCF	PORTA,2
	BSF	PORTB,6
	BSF	PORTB,5
	BSF	PORTA,3
	BSF	PORTB,0		;关显示
	BTFSC	DATA_DISP_BUFF,0
	BCF	PORTB,6
	BTFSC	DATA_DISP_BUFF,1
	BCF	PORTB,5
	BTFSC	DATA_DISP_BUFF,2
	BCF	PORTA,3
	BTFSC	DATA_DISP_BUFF,3
	BCF	PORTB,0
	BCF	TRISA,0
	BSF	PORTA,0		;点亮显示
	GOTO	DISP_PROCESS_END	

SEG2_SCAN:

	BCF	F_SCAN0_B
	BSF	F_SCAN1_B	;10	
	MOVLW	HIGH	TAB
	MOVWF	PCLATH
	MOVF	DATA_DISP_H,W
	CALL	TAB
	MOVWF	DATA_DISP_BUFF
;	BSF	TRISA,0
;	BSF	TRISA,1
;	BSF	TRISB,7
;	BSF	TRISA,2		;关显示
	BCF	PORTA,0
	BCF	PORTA,1
	BCF	PORTB,7
	BCF	PORTA,2
	BSF	PORTB,6
	BSF	PORTB,5
	BSF	PORTA,3
	BSF	PORTB,0		;关显示
	BTFSC	DATA_DISP_BUFF,4
	BCF	PORTA,3
	BTFSC	DATA_DISP_BUFF,5
	BCF	PORTB,6
	BTFSC	DATA_DISP_BUFF,6
	BCF	PORTB,5
	BTFSC	DATA_DISP_BUFF,7
	BCF	PORTB,0
	BCF	TRISA,1
	BSF	PORTA,1		;点亮显示
	GOTO	DISP_PROCESS_END
	
SEG3_SCAN:

	BSF	F_SCAN0_B
	BSF	F_SCAN1_B	;11
	MOVLW	HIGH	TAB
	MOVWF	PCLATH
	MOVF	DATA_DISP_L,W
	CALL	TAB
	MOVWF	DATA_DISP_BUFF	
;	BSF	TRISA,0
;	BSF	TRISA,1
;	BSF	TRISB,7
;	BSF	TRISA,2		;关显示
	BCF	PORTA,0
	BCF	PORTA,1
	BCF	PORTB,7
	BCF	PORTA,2
	BSF	PORTB,6
	BSF	PORTB,5
	BSF	PORTA,3
	BSF	PORTB,0		;关显示
	BTFSC	DATA_DISP_BUFF,0
	BCF	PORTB,6		;A
	BTFSC	DATA_DISP_BUFF,1
	BCF	PORTB,5		;B
	BTFSC	DATA_DISP_BUFF,2
	BCF	PORTA,3		;C	
	BTFSC	DATA_DISP_BUFF,3
	BCF	PORTB,0		;D
	BCF	TRISB,7
	BSF	PORTB,7		;点亮显示
	GOTO	DISP_PROCESS_END
		
SEG4_SCAN:

	nop
	nop
	nop
	nop
	BCF	F_SCAN0_B
	BCF	F_SCAN1_B	;00
	MOVLW	HIGH	TAB
	MOVWF	PCLATH
	MOVF	DATA_DISP_L,W
	CALL	TAB
	MOVWF	DATA_DISP_BUFF
;	BSF	TRISA,0
;	BSF	TRISA,1
;	BSF	TRISB,7
;	BSF	TRISA,2		;关显示
	BCF	PORTA,0
	BCF	PORTA,1
	BCF	PORTB,7
	BCF	PORTA,2
	BSF	PORTB,6
	BSF	PORTB,5
	BSF	PORTA,3
	BSF	PORTB,0		;关显示
	BTFSC	DATA_DISP_BUFF,4
	BCF	PORTA,3
	BTFSC	DATA_DISP_BUFF,5
	BCF	PORTB,6
	BTFSC	DATA_DISP_BUFF,6
	BCF	PORTB,5
	BTFSC	DATA_DISP_BUFF,7
	BCF	PORTB,0
	BCF	TRISA,2
	BSF	PORTA,2		;点亮显示
	GOTO	DISP_PROCESS_END
	
TAB:

	ADDWF	PCL,F
	RETLW	B'00111111'	;0	HGFEDCBA
	RETLW	B'00000110'	;1
	RETLW	B'01011011'	;2
	RETLW	B'01001111'	;3
	RETLW	B'01100110'	;4
	RETLW	B'01101101'	;5
	RETLW	B'01111101'	;6
	RETLW	B'00000111'	;7
	RETLW	B'01111111'	;8
	RETLW	B'01101111'	;9	
	RETLW	B'10111111'	;100
	
DISP_PROCESS_END:

	RETURN	

;=======================================================================
;		除法，当除数为10时，即二进制-->BCD码转换
;入口参数：一个八位二进制数作为被除数(事先需要将被除数移入W)，一个除数
;出口参数：一个八位二进制数-商，一个八位二进制数-余数，用来查表
;=======================================================================
DIV:

	MOVWF	BEICHUSHU
	MOVLW	D'8'
	MOVWF	CNT_DIV
	CLRF	SHANG
	CLRF	YUSHU
	
DIVLOOP:	
	
	BCF	C
	RLF	BEICHUSHU,F
	RLF	YUSHU,F
	MOVF	CHUSHU,W
	SUBWF	YUSHU,W
	BTFSC	C
	MOVWF	YUSHU
	RLF	SHANG,F
	DECFSZ	CNT_DIV,F
	GOTO	DIVLOOP
	RETURN
;----------------------------------------



SLEEP_PROCESS:

	BTFSS	F_SLEEP_B
	GOTO	SLEEP_PROCESS_END
	BCF	F_SLEEP_B	
	BCF	PIN_OUTPUT
	BCF	PIN_BUZZER
	CLRWDT
	BCF	WDTENS		;WDTEN
	BCF	GIE
	BSF	TRISA,0
	BSF	TRISA,1
	BSF	TRISB,7
	BSF	TRISA,2		
	BSF	TRISB,6
	BSF	TRISB,5
	BSF	TRISA,3
	BSF	TRISB,0		;关显示	
	MOVLW	B'00001000'
	MOVWF	IOCB
	MOVF	PORTB,W
	BCF	RBIF		;PBIF
	BSF	RBIE
	NOP
	NOP
	NOP
	NOP
	SLEEP
	NOP
	NOP
	NOP
	NOP
	CLRWDT
	BSF	F_STATUS_ON_B
	BSF	TRISB,1
	MOVLW	D'90'
	MOVWF	SECOND
	MOVLW	D'100'
	MOVWF	DATA_DISP
	BCF	TRISA,0
	BCF	TRISA,1
	BCF	TRISB,7
	BCF	TRISA,2	
	BCF	TRISB,6
	BCF	TRISB,5
	BCF	TRISA,3
	BCF	TRISB,0
	BSF	F_KEYLOCK_B
	CLRF	IOCB
	BCF	RBIE
	BCF	RBIF		;PBIF
	BSF	WDTENS		;WDTEN
	BSF	GIE	
SLEEP_PROCESS_END:

	RETURN
;-----------------------------------------------------
		
;********************************************  
;********************************************
        ORG     03FFH                   ; 飞凌的才有用!        
        GOTO    RESET                           
        END


;********************************************
;               CODE END                    
;********************************************
